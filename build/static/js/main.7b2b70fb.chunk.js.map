{"version":3,"sources":["components/filter.js","components/person.js","components/persons.js","components/person-form.js","components/notification.js","service/persons.js","App.js","index.js"],"names":["Filter","props","onSubmit","event","preventDefault","value","filterName","onChange","handleFilter","Person","className","key","person","id","name","number","onClick","deletePerson","Persons","style","listStyleType","padding","filteredContacts","map","PersonForm","handleAddPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Notification","notification","newError","baseUrl","axios","get","then","response","data","post","delete","put","App","useState","persons","setPersons","setNewName","setNewNumber","setFilterName","setNotification","setNewError","useEffect","personsService","filter","toLowerCase","includes","target","personFound","find","p","window","confirm","returnedPerson","setTimeout","catch","error","modifyPerson","concat","add","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b2b70fb.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => (\n  <form onSubmit={event => event.preventDefault()}>\n    <strong>Filter shown with: </strong>\n    <input\n        value={props.filterName}\n        onChange={props.handleFilter}\n      />\n  </form>\n)\n\nexport default Filter","import React from 'react'\n\nconst Person = (props) => (\n  <li className='person' key={props.person.id}>\n    <span className='name'>{props.person.name}</span>\n    <span className='number'> {props.person.number}</span>\n    <button\n      id={props.person.id}\n      onClick={props.deletePerson(props.person.id, props.person.name)}\n    >\n      Delete\n    </button>\n  </li>\n)\n\nexport default Person","import React from 'react'\nimport Person from './person'\n\nconst Persons = (props) => (\n  <ul className='persons-list' style={{listStyleType: 'none', padding: '0'}}>\n    { props.filteredContacts.map(person =>\n      <Person key={person.id} person={person} id={person.id} deletePerson={props.deletePerson}/>)\n    }\n  </ul>\n)\n\nexport default Persons\n","import React from 'react'\n\nconst PersonForm = (props) => (\n  <form onSubmit={props.handleAddPerson}>\n    <div>\n      <strong>Name: </strong>\n      <input\n        value={props.newName}\n        onChange={props.handleNameChange}\n      />\n    </div>\n    <div>\n      <strong>Number: </strong>\n      <input\n        value={props.newNumber}\n        onChange={props.handleNumberChange}\n      />\n    </div>\n    <div>\n      <button type=\"submit\">Add</button>\n    </div>\n  </form>\n)\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = (props) => {\n  if (!props.notification) return null\n\n  return (\n    <div className={`alert ${ props.newError ? 'error' : 'success' }`}>\n      {props.notification}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios';\n\nconst baseUrl = 'api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = person => {\n  const request = axios.post(baseUrl, person)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (id, person) => {\n  const request = axios.put(`${baseUrl}/${id}`, person)\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAll,\n  create,\n  remove,\n  update\n}\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/filter'\nimport Persons from './components/persons'\nimport PersonForm from './components/person-form'\nimport Notification from './components/notification'\nimport personsService from './service/persons'\n\nconst App = () => {\n\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterName, setFilterName ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n  const [ newError, setNewError ] = useState(false)\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })\n  },[])\n\n  const handleAddPerson = event => {\n    event.preventDefault()\n\n    const add = person => {\n      personsService.create(person).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setNotification(`${person.name} was added successfully!`)\n        //Remove notification\n        setTimeout(() => {\n          setNotification(null)\n        }, 3000)\n      })\n    }\n\n    const modifyPerson = (id, person) => {\n\n      if (window.confirm(`${person.name} is already added to phonebook, replace the old number with a new one?`)) {\n        personsService\n          .update(id, person)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => (person.id !== id ? person : returnedPerson)))\n            setNewName('')\n            setNewNumber('')\n            setNotification(`${person.name} was updated successfully!`)\n            //Remove notification\n            setTimeout(() => {\n              setNotification(null)\n            }, 3000)\n          })\n          .catch(error => {\n            setNewError(true)\n            setNotification(`${person.name} is already deleted from the server`)\n            setPersons(persons.filter(person => person.id !== id))\n            setNewName('')\n            setNewNumber('')\n            //Remove notification\n            setTimeout(() => {\n              setNotification(null)\n              setNewError(false)\n            }, 3000)\n          })\n      }\n    }\n\n    const person = { name: newName, number: newNumber }\n    const personFound = persons.find(p => p.name === person.name)\n\n    personFound ? modifyPerson(personFound.id, person) : add(person)\n  }\n\n  const deletePerson = (id, name) => () => {\n    if (window.confirm(`Do you want to delete ${name}?`)) {\n      personsService.remove(id).then(() => {\n        setPersons(persons.filter(person => person.id !== id))\n        setNotification(`${name} was successfully deleted!`)\n        //Remove notification\n        setTimeout(() => {\n          setNotification(null)\n        }, 3000)\n      })\n      .catch(error => {\n        setNewError(true)\n        setNotification(`${name} is already deleted from the server`)\n        setPersons(persons.filter(person => person.id !== id))\n        //Remove notification\n        setTimeout(() => {\n          setNotification(null)\n          setNewError(false)\n        }, 3000)\n      })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    setFilterName(event.target.value)\n  }\n\n  const filteredContacts = filterName ?\n    persons.filter(person => person.name.toLowerCase().includes(filterName.toLowerCase()))\n    : persons\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} newError={newError}/>\n      <Filter filterName={filterName} handleFilter={handleFilter} />\n      <h2>Add a new contact</h2>\n      <PersonForm newName={newName} newNumber={newNumber} handleAddPerson={handleAddPerson} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons filteredContacts={filteredContacts} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}